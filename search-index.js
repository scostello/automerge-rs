var searchIndex = JSON.parse('{\
"automerge":{"doc":"","tn":["0","Automerge","AutomergeBuilder","AutomergeError","Backend","BackendError","BackendError","BadCompressedChunk","Boolean","Boolean","Bytes","Bytes","CannotDeleteRootObject","CannotOverwriteCounter","CannotOverwriteCounter","CannotSetNonMapObjectAsRoot","CantExtractObject","Change","ChangeHash","ConflictsReceivedForTableKey","Counter","Counter","Cursor","Cursor","DecodeFailed","DecodingError","DiffCreatedObjectWithNoValue","DiffEditWithHeadElemId","DivergedState","DivergentChange","DocFormatUnimplemented","DuplicateChange","EncodeFailed","EncodingError","F64","F64","Frontend","FrontendError","FrontendError","GeneralError","HeadToOpId","IncrementForNonCounterObject","IndexOutOfBounds","InsertForNonSequenceObject","InsertMultipleCharsInTextChar","InsertNonTextInTextObject","InsertNonTextInTextObject","InsertPastEndOfSequence","InsertWithNonSequencePath","Int","Int","InvalidActorIdString","InvalidChangeRequest","InvalidChangeRequest","InvalidCursor","InvalidIndex","InvalidObjectId","InvalidOpId","InvalidPatch","InvalidPatch","InvalidSeq","List","List","List","LocalChange","Map","Map","Map","MapKeyInSeq","MapType","MismatchedSequenceNumber","MismatchedSequenceNumber","MismatchingObjectIDs","MismatchingObjectType","MissingElement","MissingIndex","MissingIndexError","MissingNumberValue","MissingObjectError","MissingObjectError","MissingValue","MutableDocument","NoPathToObject","NoSuchPathError","NoSuchPathError","Null","Null","ObjType","Path","PathIsNotCounter","Primitive","Primitive","ScalarValue","SequenceType","SkipListError","Str","Str","Table","Table","Table","Text","Text","Text","Timestamp","Timestamp","Uint","Uint","UnknownVersion","Value","ValueDiffContainedCursor","actor_id","actor_id","add_change","add_event_handler","apply_changes","apply_changes","apply_local_change","apply_local_change_mut","apply_patch","arbitrary","arbitrary","arbitrary","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","as_datatype","as_numerical_datatype","as_ref","boolean","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","bytes","change","change","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","compress","counter","cursor","cursor_to_path","datatype","decode","default","default","default","default","delete","deps","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extra_bytes","f64","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_json","from_str","generate_sync_message","generate_sync_message","get_change_by_hash","get_change_by_hash_mut","get_changes","get_changes","get_changes_added","get_changes_for_actor_id","get_changes_to_send","get_conflicts","get_conflicts","get_heads","get_heads","get_missing_deps","get_object_id","get_patch","get_value","get_value","get_value","hash","hash","hash","hash","hash","hash","in_flight_requests","increment","increment_by","index","insert","insert_many","int","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_boolean","is_bytes","is_counter","is_cursor","is_f64","is_int","is_list","is_map","is_null","is_primitive","is_sequence","is_str","is_table","is_text","is_timestamp","is_uint","iter_ops","key","list","load","load","load_changes","load_changes","load_document","load_document_without_hash_verification","load_without_hash_verification","map","max_op","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new_with_actor_id","new_with_initial_state","new_with_timestamper","new_with_timestamper_and_actor_id","parent","partial_cmp","partial_cmp","primitive","raw_bytes","receive_sync_message","receive_sync_message","remove_event_handler","root","save","save","seq","seq","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set","set_backend","set_frontend","size_hint","size_hint","size_hint","source","source","source","start_op","state","state","str","table","text","time","timestamp","to_f64","to_i64","to_json","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_u64","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uint","value_at_path","value_ref","value_ref","value_ref","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_backend","with_frontend","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","opid","0","0","0","object","path","path","path","path","path","path","path","sequence_length","source","value","actual","actual_id","actual_type","diff","diff","expected","index","object_id","object_id","object_id","patch_expected_id","patch_expected_type","table_id","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","List","ListRef","Map","MapRef","Primitive","RootRef","Table","TableRef","Text","TextRef","ValueRef","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","contains_key","contains_key","contains_key","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get","get","get","get","get","into","into","into","into","into","into","is_empty","is_empty","is_empty","is_empty","is_empty","iter","iter","iter","iter","iter","keys","keys","keys","len","len","len","len","len","list","map","primitive","table","text","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","value","value","value","value","value","value","values","values","values","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0"],"q":["automergeautomerge::AutomergeError","","","automerge::BackendError","","","","","","","","","","","","","","","","","","automerge::FrontendError","","","automerge::InvalidChangeRequest","","","","","","","","","","","automerge::InvalidPatch","","","","","","","","","","","","","automerge::Primitive","","","","","","","","","automerge::ScalarValue","","","","","","","","","automerge::Value","","","","","automerge::value_ref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","automerge::value_ref::ValueRef","","","",""],"d":["","The core automerge document.","A more advanced way of building an <code>Automerge</code> from …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An ordered sequence of values.","","","","A mapping from string keys to values.","","","","","","","","","","","","","","","","","","","","","","","A primitive value, leaf nodes of the document tree.","A primitive value.","","","","","","","","A mapping from unique IDs to values.","","","An ordered sequence of grapheme clusters.","","","","","","A composite value, composing maps, tables, lists, text and …","","","","","Adds the event handler and returns the id of the handler.","Apply changes from a remote document onto this one.","","Apply a change from a local frontend.","Like <code>apply_local_change</code> but returns a mutable reference to …","","","","","","","","","Returns an Option containing a <code>DataType</code> if <code>self</code> represents …","","Extract the <code>bool</code> in this <code>Primitive</code> if it represents a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build this builder, setting any unset fields to their …","Extract the <code>&amp;[u8]</code> in this <code>Primitive</code> if it represents bytes.","","Make a change to this document.","","","","","","","","","","","","","","","","","","","","","","","","","","Extract the <code>i64</code> in this <code>Primitive</code> if it represents a …","Extract the <code>Cursor</code> in this <code>Primitive</code> if it represents a …","","","","","","","","Delete the entry at <code>path</code>","","","","","","","","","","","","","","","","","","","","","Extract the <code>f64</code> in this <code>Primitive</code> if it represents a float.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert a JSON object into a <code>Value</code>.","","Generate a message to synchronise another peer.","","","","Get all of the changes which have occurred since <code>have_deps</code> …","Get the list of changes that are not transitive …","Returns all changes that are present in <code>self</code> but not …","","","Gets the set of values for <code>path</code>, returns None if the path …","Get any current conflicts at the given path.","Get the current heads of the hash graph used for …","","","","","Returns the value given by path, if it exists","Get the value at a specific path in the document.","Get the <code>Value</code> at the given path, if one exists.","","","","","","","","Increment the counter at <code>path</code> by 1","Increment the counter at path by a (possibly negative) …","","","","Extract the <code>i64</code> in this <code>Primitive</code> if it represents an int.","","","","","","","","","","","","","","","","","","","","Return whether the <code>Primitive</code> is a boolean.","Return whether the <code>Primitive</code> is bytes.","Return whether the <code>Primitive</code> is a counter.","Return whether the <code>Primitive</code> is a cursor.","Return whether the <code>Primitive</code> is a float.","Return whether the <code>Primitive</code> is an int.","Return whether the <code>Value</code> is a list.","Return whether the <code>Value</code> is a map.","Return whether the <code>Primitive</code> is null.","Return whether the <code>Value</code> is a primitive.","","Return whether the <code>Primitive</code> is a string.","Return whether the <code>Value</code> is a table.","Return whether the <code>Value</code> is text.","Return whether the <code>Primitive</code> is a timestamp.","Return whether the <code>Primitive</code> is a uint.","","","Extract the elements in this <code>Value</code> if it represents a list.","Load a new document from a previously saved one.","","Load all of the changes from a previous document into this …","","","","","Extract the inner map in this <code>Value</code> if it represents a map.","","","","","","","","","","","","","Construct a new, empty, automerge instance.","","","","","","","","","Extract the <code>Primitive</code> in this <code>Value</code> if it represents a …","","Receive a sync message from a peer and apply any updates …","","Remove the handler with the given id, returning whether it …","","Save this document into a compact byte representation.","","","","","","","","","","","Set the value at <code>path</code> to <code>value</code>","Set the backend, taking a mutable reference to the builder …","Set the frontend, taking a mutable reference to the …","","","","","","","","","Get the current value that this document stores.","Extract the <code>&amp;str</code> in this <code>Primitive</code> if it represents a …","Extract the inner map in this <code>Value</code> if it represents a …","Extract the graphemes in this <code>Value</code> if it represents text.","","Extract the <code>i64</code> in this <code>Primitive</code> if it represents a …","","If this value can be coerced to an i64, return the i64 …","Convert this <code>Value</code> into a JSON object.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extract the <code>u64</code> in this <code>Primitive</code> if it represents a uint.","","","","Get a reference to the value that this document stores, …","","","","","","","","","","","","","","","","","","","","Set the backend, consuming the builder and returning it …","Set the frontend, consuming the builder and returning it …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A ValueRef represents a way to interact with the frontend…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,0,0,0,0,0,2,3,4,5,4,5,6,7,6,6,3,0,0,8,4,5,4,5,3,3,8,8,3,3,3,3,3,3,4,5,0,0,2,3,3,6,3,6,8,8,6,6,6,4,5,7,0,7,3,8,3,3,0,2,3,9,10,11,0,9,12,11,3,0,7,8,8,8,3,3,6,3,7,3,3,0,3,7,6,4,5,0,0,7,0,11,0,0,3,4,5,9,12,11,9,10,11,4,5,4,5,3,0,8,13,14,15,16,17,16,16,16,14,12,5,11,12,5,11,4,4,11,5,14,2,18,17,9,12,10,7,8,6,19,20,4,1,16,13,5,11,3,14,2,18,17,9,12,10,7,8,6,19,20,4,1,16,13,5,11,3,18,5,14,17,9,12,10,19,20,4,1,16,13,5,11,9,12,10,19,20,4,1,16,13,5,11,20,1,13,5,5,15,4,13,14,18,17,16,19,13,9,12,10,4,1,9,12,10,7,8,6,19,20,4,1,13,5,11,13,5,14,2,2,17,9,9,12,10,7,7,8,8,6,6,19,20,4,4,1,16,13,5,11,3,3,14,2,2,2,2,18,17,9,9,9,12,10,7,7,8,6,6,19,20,4,4,4,4,4,4,4,4,1,16,13,13,13,5,5,11,11,11,11,11,11,11,11,3,3,3,13,11,1,17,16,16,16,17,16,16,16,16,14,17,17,16,16,14,16,14,17,11,9,12,10,20,1,13,14,19,19,20,19,19,5,14,2,18,17,9,12,10,7,8,6,19,20,4,1,16,13,5,11,3,5,5,5,5,5,5,11,11,5,11,9,5,11,11,5,5,13,20,11,17,16,17,16,13,13,16,11,13,7,8,6,19,20,4,1,13,5,11,14,17,16,14,14,14,14,20,20,1,11,13,17,16,16,20,17,16,14,13,9,12,10,4,1,5,11,19,18,18,12,5,11,2,6,3,13,14,17,5,11,11,13,5,4,4,11,9,12,10,19,20,4,1,16,13,5,11,2,9,7,8,6,4,3,4,14,2,18,17,9,12,10,7,8,6,19,20,4,1,1,16,13,13,5,11,3,14,2,18,17,9,12,10,7,8,6,19,20,4,1,16,13,5,11,3,14,2,18,17,9,12,10,7,8,6,19,20,4,1,16,13,5,11,3,5,15,0,14,17,14,2,18,17,9,12,10,7,8,6,19,20,4,1,16,13,5,11,3,18,18,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,25,40,41,42,43,44,45,46,47,48,49,50,44,50,51,52,53,54,55,56,57,53,58,56,55,58,54,55,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,0,82,0,82,0,82,0,82,0,0,83,84,85,86,87,82,83,84,85,86,87,82,83,84,85,86,87,82,83,84,85,86,87,82,84,85,86,83,84,85,86,87,82,83,84,85,86,87,82,83,84,85,86,87,83,84,85,86,87,82,83,84,85,86,87,83,84,85,86,87,84,85,86,83,84,85,86,87,82,82,82,82,82,83,84,85,86,87,82,83,84,85,86,87,82,83,84,85,86,87,82,83,84,85,86,87,82,83,84,85,86,87,82,84,85,86,83,84,85,86,87,82,88,89,90,91,92],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["actorid",3]],null,[[["localchange",3]],["result",4,[["invalidchangerequest",4]]]],[[["eventhandler",4]],["eventhandlerid",3]],[[["vec",3,[["change",3]]]],["result",4,[["automergeerror",4]]]],[[["vec",3,[["change",3],["global",3]]]],["result",4,[["patch",3],["automergeerror",4]]]],[[["change",3]],["result",4,[["automergeerror",4]]]],[[["change",3]],["result",4,[["automergeerror",4]]]],[[["patch",3]],["result",4,[["invalidpatch",4]]]],[[["unstructured",3]],["result",4,[["maptype",4],["error",4]]]],[[["unstructured",3]],["result",4,[["primitive",4],["error",4]]]],[[["unstructured",3]],["result",4,[["value",4],["error",4]]]],[[["unstructured",3]],["result",4,[["maptype",4],["error",4]]]],[[["unstructured",3]],["result",4,[["primitive",4],["error",4]]]],[[["unstructured",3]],["result",4,[["value",4],["error",4]]]],[[["datatype",4]],["result",4,[["scalarvalue",4],["invalidscalarvalue",3]]]],[[],["option",4,[["datatype",4]]]],[[],["value",4]],[[],["option",4,[["bool",15]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["automerge",3]],[[],["option",4]],[[["option",4,[["string",3]]]],["result",4]],[[["option",4,[["string",3]]]],["result",4]],[[],["objtype",4]],[[],["maptype",4]],[[],["sequencetype",4]],[[],["localchange",3]],[[],["path",3]],[[],["scalarvalue",4]],[[],["changehash",3]],[[],["backend",3]],[[],["change",3]],[[],["primitive",4]],[[],["value",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["path",3]],["ordering",4]],[[["changehash",3]],["ordering",4]],[[]],[[],["option",4,[["i64",15]]]],[[],["option",4,[["cursor",3]]]],[[["path",3]],["option",4,[["cursor",3]]]],[[],["option",4,[["datatype",4]]]],[[],["change",3]],[[],["frontend",3]],[[],["automergebuilder",3]],[[],["automerge",3]],[[],["backend",3]],[[["path",3]],["localchange",3]],null,[[],["result",4,[["objtype",4]]]],[[],["result",4,[["maptype",4]]]],[[],["result",4,[["sequencetype",4]]]],[[],["result",4,[["scalarvalue",4]]]],[[],["result",4,[["changehash",3]]]],[[["objtype",4]],["bool",15]],[[["maptype",4]],["bool",15]],[[["sequencetype",4]],["bool",15]],[[["automergefrontenderror",4]],["bool",15]],[[["invalidpatch",4]],["bool",15]],[[["invalidchangerequest",4]],["bool",15]],[[["localchange",3]],["bool",15]],[[["path",3]],["bool",15]],[[["scalarvalue",4]],["bool",15]],[[["changehash",3]],["bool",15]],[[["change",3]],["bool",15]],[[["primitive",4]],["bool",15]],[[["value",4]],["bool",15]],[[]],[[],["option",4,[["f64",15]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[["backenderror",4]]],[[["invalidpatch",4]]],[[["frontenderror",4]]],[[]],[[]],[[["sequencetype",4]],["objtype",4]],[[["maptype",4]],["objtype",4]],[[]],[[]],[[]],[[]],[[["invalidactorid",3]],["automergefrontenderror",4]],[[]],[[]],[[["missingindexerror",3]],["invalidchangerequest",4]],[[]],[[]],[[["primitive",4]],["scalarvalue",4]],[[]],[[["i64",15]],["scalarvalue",4]],[[["str",15]],["scalarvalue",4]],[[["u64",15]],["scalarvalue",4]],[[["i32",15]],["scalarvalue",4]],[[["char",15]],["scalarvalue",4]],[[["bool",15]],["scalarvalue",4]],[[]],[[]],[[["change",3]],["change",3]],[[["change",3]],["change",3]],[[]],[[]],[[["cursordiff",3]],["primitive",4]],[[["cursor",3]],["value",4]],[[["hashmap",3,[["randomstate",3]]]],["value",4]],[[["char",15]],["value",4]],[[["str",15]],["value",4]],[[["vec",3,[["global",3]]]],["value",4]],[[]],[[["primitive",4]],["value",4]],[[["i64",15]],["value",4]],[[]],[[["error",4]],["automergeerror",4]],[[["error",4]],["automergeerror",4]],[[["vec",3,[["u8",15],["global",3]]]],["result",4,[["change",3],["error",4]]]],[[["value",4]],["value",4]],[[["str",15]],["result",4,[["changehash",3]]]],[[["syncstate",3]],["option",4,[["syncmessage",3]]]],[[["syncstate",3]],["option",4,[["syncmessage",3]]]],[[["changehash",3]],["option",4,[["change",3]]]],[[["changehash",3]],["option",4,[["change",3]]]],[[],["vec",3,[["change",3]]]],[[],["vec",3,[["change",3],["global",3]]]],[[["backend",3]],["vec",3,[["change",3],["global",3]]]],[[["actorid",3]],["result",4,[["vec",3,[["change",3],["global",3]]],["automergeerror",4]]]],[[["vec",3,[["synchave",3],["global",3]]]],["vec",3,[["change",3],["global",3]]]],[[["path",3]],["option",4,[["hashmap",3,[["opid",3],["value",4],["randomstate",3]]]]]],[[["path",3]],["option",4,[["hashmap",3,[["opid",3],["value",4]]]]]],[[],["vec",3,[["changehash",3]]]],[[],["vec",3,[["changehash",3],["global",3]]]],[[],["vec",3,[["changehash",3],["global",3]]]],[[["path",3]],["option",4,[["objectid",4]]]],[[],["result",4,[["patch",3],["automergeerror",4]]]],[[["path",3]],["option",4,[["value",4]]]],[[["path",3]],["option",4,[["value",4]]]],[[["path",3]],["option",4,[["cow",4,[["value",4]]]]]],[[]],[[]],[[]],[[]],[[]],null,[[],["vec",3,[["u64",15],["global",3]]]],[[["path",3]],["localchange",3]],[[["path",3],["i64",15]],["localchange",3]],[[["u32",15]],["path",3]],[[["path",3],["value",4]],["localchange",3]],[[["path",3],["vec",3,[["value",4],["global",3]]]],["localchange",3]],[[],["option",4,[["i64",15]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["operationiterator",3]],[[],["path",3]],[[],["option",4]],[[["vec",3,[["u8",15]]]],["result",4,[["automergeerror",4]]]],[[["vec",3,[["u8",15],["global",3]]]],["result",4,[["backend",3],["automergeerror",4]]]],[[["vec",3,[["change",3]]]],["result",4,[["backenderror",4]]]],[[["vec",3,[["change",3],["global",3]]]],["result",4,[["automergeerror",4]]]],[[],["result",4,[["vec",3,[["change",3],["global",3]]],["automergeerror",4]]]],[[],["result",4,[["vec",3,[["change",3],["global",3]]],["automergeerror",4]]]],[[],["result",4,[["backend",3],["automergeerror",4]]]],[[],["option",4,[["hashmap",3]]]],[[],["u64",15]],[[["automergefrontenderror",4]],["bool",15]],[[["invalidpatch",4]],["bool",15]],[[["invalidchangerequest",4]],["bool",15]],[[["localchange",3]],["bool",15]],[[["path",3]],["bool",15]],[[["scalarvalue",4]],["bool",15]],[[["changehash",3]],["bool",15]],[[["change",3]],["bool",15]],[[["primitive",4]],["bool",15]],[[["value",4]],["bool",15]],[[],["frontend",3]],[[]],[[],["backend",3]],[[],["frontend",3]],[[["value",4]],["result",4,[["invalidinitialstateerror",4]]]],[[["box",3,[["fn",8],["global",3]]]],["frontend",3]],[[["box",3,[["fn",8],["global",3]]]],["frontend",3]],[[],["path",3]],[[["path",3]],["option",4,[["ordering",4]]]],[[["changehash",3]],["option",4,[["ordering",4]]]],[[],["option",4,[["primitive",4]]]],[[]],[[["syncstate",3],["syncmessage",3]],["result",4,[["automergeerror",4]]]],[[["syncstate",3],["syncmessage",3]],["result",4,[["option",4,[["patch",3]]],["automergeerror",4]]]],[[["eventhandlerid",3]],["bool",15]],[[],["path",3]],[[],["result",4,[["vec",3,[["u8",15]]],["backenderror",4]]]],[[],["result",4,[["vec",3,[["u8",15],["global",3]]],["automergeerror",4]]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["path",3]],["localchange",3]],[[["backend",3]]],[[["frontend",3]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],null,[[],["value",4]],[[],["value",4]],[[],["option",4,[["str",15]]]],[[],["option",4,[["hashmap",3]]]],[[],["option",4]],null,[[],["option",4,[["i64",15]]]],[[],["option",4,[["f64",15]]]],[[],["option",4,[["i64",15]]]],[[],["value",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["option",4,[["u64",15]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["changehash",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["change",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4,[["u64",15]]]],[[["path",3]],["option",4,[["value",4]]]],null,[[],["rootref",3]],[[],["rootref",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["backend",3]]],[[["frontend",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["listref",3]],[[],["mapref",3]],[[],["rootref",3]],[[],["tableref",3]],[[],["textref",3]],[[],["valueref",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["bool",15]],[[["str",15]],["bool",15]],[[["str",15]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],["option",4,[["valueref",4]]]],[[["str",15]],["option",4,[["valueref",4]]]],[[["str",15]],["option",4,[["valueref",4]]]],[[["str",15]],["option",4,[["valueref",4]]]],[[["usize",15]],["option",4,[["smolstr",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["option",4,[["listref",3]]]],[[],["option",4,[["mapref",3]]]],[[],["option",4,[["primitive",4]]]],[[],["option",4,[["tableref",3]]]],[[],["option",4,[["textref",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["value",4]],[[],["value",4]],[[],["value",4]],[[],["value",4]],[[],["value",4]],[[],["value",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null],"p":[[3,"ChangeHash"],[4,"AutomergeError"],[4,"BackendError"],[4,"ScalarValue"],[4,"Primitive"],[4,"InvalidChangeRequest"],[4,"FrontendError"],[4,"InvalidPatch"],[4,"ObjType"],[4,"SequenceType"],[4,"Value"],[4,"MapType"],[3,"Change"],[3,"Frontend"],[8,"MutableDocument"],[3,"Backend"],[3,"Automerge"],[3,"AutomergeBuilder"],[3,"LocalChange"],[3,"Path"],[13,"BackendError"],[13,"FrontendError"],[13,"InvalidPatch"],[13,"MissingIndex"],[13,"MissingElement"],[13,"NoPathToObject"],[13,"CantExtractObject"],[13,"SkipListError"],[13,"IndexOutOfBounds"],[13,"InvalidOpId"],[13,"InvalidObjectId"],[13,"GeneralError"],[13,"UnknownVersion"],[13,"DuplicateChange"],[13,"DivergedState"],[13,"InvalidSeq"],[13,"DivergentChange"],[13,"EncodingError"],[13,"DecodingError"],[13,"InvalidCursor"],[13,"MissingObjectError"],[13,"NoSuchPathError"],[13,"InvalidActorIdString"],[13,"InsertNonTextInTextObject"],[13,"CannotOverwriteCounter"],[13,"NoSuchPathError"],[13,"IncrementForNonCounterObject"],[13,"InsertWithNonSequencePath"],[13,"InsertForNonSequenceObject"],[13,"InsertPastEndOfSequence"],[13,"MissingIndexError"],[13,"CannotSetNonMapObjectAsRoot"],[13,"MismatchedSequenceNumber"],[13,"MismatchingObjectIDs"],[13,"MismatchingObjectType"],[13,"InsertNonTextInTextObject"],[13,"ConflictsReceivedForTableKey"],[13,"InvalidIndex"],[13,"Bytes"],[13,"Str"],[13,"Int"],[13,"Uint"],[13,"F64"],[13,"Counter"],[13,"Timestamp"],[13,"Boolean"],[13,"Cursor"],[13,"Bytes"],[13,"Str"],[13,"Int"],[13,"Uint"],[13,"F64"],[13,"Counter"],[13,"Timestamp"],[13,"Cursor"],[13,"Boolean"],[13,"Map"],[13,"Table"],[13,"List"],[13,"Text"],[13,"Primitive"],[4,"ValueRef"],[3,"ListRef"],[3,"MapRef"],[3,"RootRef"],[3,"TableRef"],[3,"TextRef"],[13,"Primitive"],[13,"Map"],[13,"Table"],[13,"List"],[13,"Text"]]},\
"automerge_backend":{"doc":"","t":[12,13,4,3,13,13,13,3,13,13,3,13,13,3,13,13,4,13,13,13,13,13,13,4,13,4,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,3,3,13,13,13,13,13,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,12,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["0","AfterApplyChange","AutomergeError","Backend","BadChangeFormat","BadCompressedChunk","BeforeApplyChange","BloomFilter","BufferSizeDidNotChange","CantExtractObject","Change","ChangeContainedCompressedColumns","ChangeDecompressFailed","ChangeEventHandler","ColumnsNotInAscendingOrder","DecodeFailed","DecodingError","DecodingError","DivergedState","DivergentChange","DocFormatUnimplemented","DuplicateChange","EncodeFailed","EncodingError","EncodingError","EventHandler","EventHandlerId","GeneralError","HeadToOpId","IndexOutOfBounds","InvalidChange","InvalidChecksum","InvalidCursor","InvalidObjectId","InvalidOpId","InvalidSeq","Io","Io","Leb128","MapKeyInSeq","MismatchedHeads","MissingElement","MissingIndex","MissingNumberValue","MissingObjectError","MissingValue","NoDecodedValue","NoDocChanges","NoPathToObject","NotEnoughBytes","Overflow","SkipListError","SyncHave","SyncMessage","SyncState","TryingToReadPastEnd","UnknownVersion","WrongByteLength","WrongMagicBytes","WrongType","actor_id","add_event_handler","apply_changes","apply_local_change","apply_local_change_mut","bloom","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","changes","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compress","contains_hash","decode","decode","decode","default","default","default","default","deps","encode","encode","eq","extra_bytes","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","generate_sync_message","get_change_by_hash","get_change_by_hash_mut","get_changes","get_changes_added","get_changes_for_actor_id","get_changes_to_send","get_heads","get_missing_deps","get_patch","hash","have","heads","into","into","into","into","into","into","into","into","into","into","into","into","into_bytes","iter_ops","last_sent_heads","last_sync","load","load_changes","load_document","load_document_without_hash_verification","load_without_hash_verification","max_op","ne","need","new","raw_bytes","receive_sync_message","remove_event_handler","save","sent_hashes","seq","shared_heads","source","source","source","start_op","their_have","their_heads","their_need","time","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","opid","0","0","0","0","0","calculated","derived_heads","expected","expected_one_of","found","found","found","found","last","stated_heads","0","0","0"],"q":["automerge_backendautomerge_backend::AutomergeError","","","","","","","","","","","","","","","","","","automerge_backend::DecodingError","","","","","","","","","","","","","","","automerge_backend::EncodingError","automerge_backend::EventHandler",""],"d":["","An event handler that gets called after a change has been …","","","","","An event handler that gets called before a change is …","","","","","","","A handler for changes.","","","The error type for decoding operations.","","","","","","","The error type for encoding operations.","","An general event handler.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds the event handler and returns the id of the handler.","","Apply a change from a local frontend.","Like <code>apply_local_change</code> but returns a mutable reference to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the list of changes that are not transitive …","Returns all changes that are present in <code>self</code> but not …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Remove the handler with the given id, returning whether it …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,2,0,0,3,4,2,0,3,4,0,3,3,0,3,4,0,4,4,4,4,4,4,0,4,0,0,4,4,4,3,3,4,4,4,4,3,5,3,4,3,4,4,4,4,4,3,3,4,3,3,4,0,0,0,3,4,3,3,3,6,7,7,7,7,8,1,2,7,6,3,5,4,9,10,11,8,12,1,2,7,6,3,5,4,9,10,11,8,12,12,7,6,9,10,11,8,12,7,6,9,10,11,8,12,6,10,6,11,12,7,10,11,8,6,11,12,6,6,2,7,6,3,3,5,5,4,4,10,11,8,12,1,2,7,6,6,6,3,3,3,5,5,4,4,4,9,10,10,11,8,12,6,7,7,7,7,7,7,7,7,7,7,6,12,12,1,2,7,6,3,5,4,9,10,11,8,12,10,6,11,8,7,7,6,6,7,6,6,12,7,6,7,7,7,11,6,11,3,5,4,6,11,11,11,6,7,6,9,10,11,8,12,3,5,4,1,2,7,6,6,3,5,4,9,10,10,11,8,12,1,2,7,6,3,5,4,9,10,11,8,12,1,2,7,6,3,5,4,9,10,11,8,12,1,2,7,6,3,5,4,9,10,11,8,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,14,29,30,31,32,33,34,35,36,37,38,38,37,39,35,39,36,40,41,42],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["actorid",3]],[[["eventhandler",4]],["eventhandlerid",3]],[[["vec",3,[["change",3]]]],["result",4,[["patch",3],["automergeerror",4]]]],[[["change",3]],["result",4,[["automergeerror",4]]]],[[["change",3]],["result",4,[["automergeerror",4]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["backend",3]],[[],["change",3]],[[],["eventhandlerid",3]],[[],["bloomfilter",3]],[[],["syncstate",3]],[[],["synchave",3]],[[],["syncmessage",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["changehash",3]],["bool",15]],[[],["change",3]],[[],["result",4,[["error",4]]]],[[],["result",4,[["syncmessage",3],["error",4]]]],[[],["backend",3]],[[],["bloomfilter",3]],[[]],[[],["synchave",3]],null,[[],["result",4,[["vec",3,[["u8",15]]],["error",4]]]],[[],["result",4,[["vec",3,[["u8",15]]],["error",4]]]],[[["change",3]],["bool",15]],[[]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["change",3]]],[[["change",3]]],[[]],[[]],[[["error",3]]],[[["error",4]]],[[["error",3]]],[[]],[[["error",4]]],[[["error",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["vec",3,[["u8",15]]]],["result",4,[["change",3],["error",4]]]],[[["syncstate",3]],["option",4,[["syncmessage",3]]]],[[["changehash",3]],["option",4,[["change",3]]]],[[["changehash",3]],["option",4,[["change",3]]]],[[],["vec",3,[["change",3]]]],[[],["vec",3,[["change",3]]]],[[["actorid",3]],["result",4,[["vec",3,[["change",3]]],["automergeerror",4]]]],[[["vec",3,[["synchave",3]]]],["vec",3,[["change",3]]]],[[],["vec",3,[["changehash",3]]]],[[],["vec",3,[["changehash",3]]]],[[],["result",4,[["patch",3],["automergeerror",4]]]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["vec",3,[["u8",15]]],["error",4]]]],[[],["operationiterator",3]],null,null,[[["vec",3,[["u8",15]]]],["result",4,[["automergeerror",4]]]],[[["vec",3,[["change",3]]]],["result",4,[["automergeerror",4]]]],[[],["result",4,[["vec",3,[["change",3]]],["automergeerror",4]]]],[[],["result",4,[["vec",3,[["change",3]]],["automergeerror",4]]]],[[],["result",4,[["automergeerror",4]]]],[[],["u64",15]],[[["change",3]],["bool",15]],null,[[]],[[]],[[["syncstate",3],["syncmessage",3]],["result",4,[["option",4,[["patch",3]]],["automergeerror",4]]]],[[["eventhandlerid",3]],["bool",15]],[[],["result",4,[["vec",3,[["u8",15]]],["automergeerror",4]]]],null,null,null,[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"ChangeEventHandler"],[4,"EventHandler"],[4,"DecodingError"],[4,"AutomergeError"],[4,"EncodingError"],[3,"Change"],[3,"Backend"],[3,"SyncHave"],[3,"EventHandlerId"],[3,"BloomFilter"],[3,"SyncState"],[3,"SyncMessage"],[13,"MissingIndex"],[13,"MissingElement"],[13,"NoPathToObject"],[13,"CantExtractObject"],[13,"SkipListError"],[13,"IndexOutOfBounds"],[13,"InvalidOpId"],[13,"InvalidObjectId"],[13,"GeneralError"],[13,"UnknownVersion"],[13,"DuplicateChange"],[13,"DivergedState"],[13,"InvalidSeq"],[13,"DivergentChange"],[13,"EncodingError"],[13,"DecodingError"],[13,"InvalidCursor"],[13,"BadChangeFormat"],[13,"InvalidChange"],[13,"ChangeDecompressFailed"],[13,"Leb128"],[13,"Io"],[13,"InvalidChecksum"],[13,"MismatchedHeads"],[13,"WrongByteLength"],[13,"WrongType"],[13,"ColumnsNotInAscendingOrder"],[13,"Io"],[13,"BeforeApplyChange"],[13,"AfterApplyChange"]]},\
"automerge_backend_wasm":{"doc":"","t":[3,3,5,5,11,11,11,11,11,11,5,11,11,5,5,11,11,11,5,5,5,11,11,11,11,11,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,5,5,11,11,5,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["JsSyncState","Object","apply_changes","apply_local_change","as_ref","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","decode_sync_message","decode_sync_state","deref","describe","describe","encode_sync_message","encode_sync_state","free","from","from","from","from_abi","from_abi","generate_sync_message","get_all_changes","get_changes","get_changes_added","get_heads","get_missing_deps","get_patch","init","init_sync_state","instanceof","into","into","into_abi","into_abi","is_none","is_none","last_sent_heads","load","load_changes","none","none","receive_sync_message","ref_from_abi","ref_from_abi","ref_mut_from_abi","return_abi","return_abi","save","set_last_sent_heads","set_sent_hashes","shared_heads","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_from_js","unchecked_from_js_ref","vzip","vzip"],"q":["automerge_backend_wasm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,1,1,2,1,2,0,2,2,0,0,1,1,2,0,0,0,1,1,2,1,2,0,0,0,0,0,0,0,0,0,1,1,2,1,2,1,2,2,0,0,1,2,0,1,2,2,1,2,0,2,2,2,2,1,2,1,2,1,2,1,1,1,2],"f":[null,null,[[["object",3],["array",3]],["result",4,[["jsvalue",3],["jsvalue",3]]]],[[["object",3],["jsvalue",3]],["result",4,[["jsvalue",3],["jsvalue",3]]]],[[],["object",3]],[[],["jsvalue",3]],[[]],[[]],[[]],[[]],[[["object",3]],["result",4,[["object",3],["jsvalue",3]]]],[[],["jssyncstate",3]],[[]],[[["jsvalue",3]],["result",4,[["jsvalue",3],["jsvalue",3]]]],[[["jsvalue",3]],["result",4,[["jssyncstate",3],["jsvalue",3]]]],[[],["jsvalue",3]],[[]],[[]],[[["jsvalue",3]],["result",4,[["jsvalue",3],["jsvalue",3]]]],[[["jssyncstate",3]],["result",4,[["jsvalue",3],["jsvalue",3]]]],[[["object",3]],["result",4,[["jsvalue",3]]]],[[["jsvalue",3]],["object",3]],[[]],[[]],[[]],[[["u32",15]]],[[["object",3],["jssyncstate",3]],["result",4,[["jsvalue",3],["jsvalue",3]]]],[[["object",3]],["result",4,[["jsvalue",3],["jsvalue",3]]]],[[["object",3],["jsvalue",3]],["result",4,[["jsvalue",3],["jsvalue",3]]]],[[["object",3],["object",3]],["result",4,[["jsvalue",3],["jsvalue",3]]]],[[["object",3]],["result",4,[["array",3],["jsvalue",3]]]],[[["object",3]],["result",4,[["jsvalue",3],["jsvalue",3]]]],[[["object",3]],["result",4,[["jsvalue",3],["jsvalue",3]]]],[[],["result",4,[["object",3],["jsvalue",3]]]],[[],["result",4,[["jssyncstate",3],["jsvalue",3]]]],[[["jsvalue",3]],["bool",15]],[[]],[[]],[[]],[[],["u32",15]],[[],["bool",15]],[[],["bool",15]],[[],["jsvalue",3]],[[["jsvalue",3]],["result",4,[["jsvalue",3],["jsvalue",3]]]],[[["object",3],["array",3]],["result",4,[["jsvalue",3],["jsvalue",3]]]],[[]],[[]],[[["object",3],["jssyncstate",3],["jsvalue",3]],["result",4,[["jsvalue",3],["jsvalue",3]]]],[[]],[[]],[[]],[[]],[[]],[[["object",3]],["result",4,[["jsvalue",3],["jsvalue",3]]]],[[["jsvalue",3]]],[[["jsvalue",3]]],[[],["jsvalue",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["jsvalue",3]]],[[["jsvalue",3]]],[[]],[[]]],"p":[[3,"Object"],[3,"JsSyncState"]]},\
"automerge_frontend":{"doc":"","t":[4,13,13,13,13,13,13,3,13,13,3,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,4,13,13,4,4,13,3,13,13,13,13,13,13,13,8,13,13,13,3,13,4,13,13,13,13,13,13,4,13,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,0,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,3,13,3,13,3,13,3,13,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12],"n":["AutomergeFrontendError","Boolean","Bytes","CannotDeleteRootObject","CannotOverwriteCounter","CannotOverwriteCounter","CannotSetNonMapObjectAsRoot","Conflicts","ConflictsReceivedForTableKey","Counter","Cursor","Cursor","DiffCreatedObjectWithNoValue","DiffEditWithHeadElemId","F64","Frontend","IncrementForNonCounterObject","InitialStateMustBeMap","InsertForNonSequenceObject","InsertMultipleCharsInTextChar","InsertNonTextInTextObject","InsertNonTextInTextObject","InsertPastEndOfSequence","InsertWithNonSequencePath","Int","InvalidActorIdString","InvalidChangeRequest","InvalidChangeRequest","InvalidIndex","InvalidInitialStateError","InvalidPatch","List","LocalChange","Map","MismatchedSequenceNumber","MismatchedSequenceNumber","MismatchingObjectIDs","MismatchingObjectType","MissingIndexError","MissingObjectError","MutableDocument","NoSuchPathError","NoSuchPathError","Null","Path","PathIsNotCounter","Primitive","Primitive","Str","Table","Text","Timestamp","Uint","Value","ValueDiffContainedCursor","actor_id","add_change","apply_patch","arbitrary","arbitrary","arbitrary","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","as_ref","boolean","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","change","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","counter","cursor","cursor_to_path","default","delete","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","f64","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_json","get_conflicts","get_object_id","get_value","get_value","hash","in_flight_requests","increment","increment_by","index","index","insert","insert_many","int","into","into","into","into","into","into","into","into","into","into","into","is_boolean","is_bytes","is_counter","is_cursor","is_f64","is_int","is_list","is_map","is_null","is_primitive","is_str","is_table","is_text","is_timestamp","is_uint","key","list","map","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new_with_actor_id","new_with_initial_state","new_with_timestamper","new_with_timestamper_and_actor_id","parent","partial_cmp","primitive","root","seq","serialize","serialize","serialize","serialize","set","size_hint","size_hint","size_hint","source","state","str","table","text","timestamp","to_json","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uint","value_at_path","value_ref","value_ref","0","0","0","object","path","path","path","path","path","path","path","sequence_length","source","value","actual","actual_id","actual_type","diff","diff","expected","index","object_id","object_id","object_id","patch_expected_id","patch_expected_type","table_id","0","0","0","0","0","0","0","0","0","0","0","0","0","0","List","ListRef","Map","MapRef","Primitive","RootRef","Table","TableRef","Text","TextRef","ValueRef","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","contains_key","contains_key","contains_key","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get","get","get","get","get","into","into","into","into","into","into","is_empty","is_empty","is_empty","is_empty","is_empty","iter","iter","iter","iter","iter","keys","keys","keys","len","len","len","len","len","list","map","primitive","table","text","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","value","value","value","value","value","value","values","values","values","0","0","0","0","0"],"q":["automerge_frontendautomerge_frontend::AutomergeFrontendError","","","automerge_frontend::InvalidChangeRequest","","","","","","","","","","","automerge_frontend::InvalidPatch","","","","","","","","","","","","","automerge_frontend::Primitive","","","","","","","","","automerge_frontend::Value","","","","","automerge_frontend::value_ref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","automerge_frontend::value_ref::ValueRef","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An ordered sequence of values.","","A mapping from string keys to values.","","","","","","","","","","","","","A primitive value, leaf nodes of the document tree.","A primitive value.","","A mapping from unique IDs to values.","An ordered sequence of grapheme clusters.","","","A composite value, composing maps, tables, lists, text and …","","","","","","","","","","","","Extract the <code>bool</code> in this <code>Primitive</code> if it represents a …","","","","","","","","","","","","","","","","","","","","","","","Extract the <code>&amp;[u8]</code> in this <code>Primitive</code> if it represents bytes.","","","","","","","","","","","","","","","Extract the <code>i64</code> in this <code>Primitive</code> if it represents a …","Extract the <code>Cursor</code> in this <code>Primitive</code> if it represents a …","","","Delete the entry at <code>path</code>","","","","","","","","","","","Extract the <code>f64</code> in this <code>Primitive</code> if it represents a float.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert a JSON object into a <code>Value</code>.","Gets the set of values for <code>path</code>, returns None if the path …","","Returns the value given by path, if it exists","Get the <code>Value</code> at the given path, if one exists.","","","Increment the counter at <code>path</code> by 1","Increment the counter at path by a (possibly negative) …","","","","","Extract the <code>i64</code> in this <code>Primitive</code> if it represents an int.","","","","","","","","","","","","Return whether the <code>Primitive</code> is a boolean.","Return whether the <code>Primitive</code> is bytes.","Return whether the <code>Primitive</code> is a counter.","Return whether the <code>Primitive</code> is a cursor.","Return whether the <code>Primitive</code> is a float.","Return whether the <code>Primitive</code> is an int.","Return whether the <code>Value</code> is a list.","Return whether the <code>Value</code> is a map.","Return whether the <code>Primitive</code> is null.","Return whether the <code>Value</code> is a primitive.","Return whether the <code>Primitive</code> is a string.","Return whether the <code>Value</code> is a table.","Return whether the <code>Value</code> is text.","Return whether the <code>Primitive</code> is a timestamp.","Return whether the <code>Primitive</code> is a uint.","","Extract the elements in this <code>Value</code> if it represents a list.","Extract the inner map in this <code>Value</code> if it represents a map.","","","","","","","","","","","","","","","","","","Extract the <code>Primitive</code> in this <code>Value</code> if it represents a …","","","","","","","Set the value at <code>path</code> to <code>value</code>","","","","","","Extract the <code>&amp;str</code> in this <code>Primitive</code> if it represents a …","Extract the inner map in this <code>Value</code> if it represents a …","Extract the graphemes in this <code>Value</code> if it represents text.","Extract the <code>i64</code> in this <code>Primitive</code> if it represents a …","Convert this <code>Value</code> into a JSON object.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extract the <code>u64</code> in this <code>Primitive</code> if it represents a uint.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A ValueRef represents a way to interact with the frontend…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,2,3,2,2,0,4,1,0,1,4,4,1,0,2,5,2,4,4,2,2,2,1,3,0,3,4,0,0,6,0,6,3,4,4,4,2,3,0,3,2,1,0,3,0,6,1,6,6,1,1,0,4,7,8,7,9,1,6,9,1,6,6,1,7,3,5,4,2,10,11,12,9,1,6,7,3,5,4,2,10,11,12,9,1,6,1,7,10,11,12,9,1,6,10,11,12,9,1,6,11,1,1,8,7,10,3,5,4,2,10,11,12,9,1,6,1,7,3,3,5,5,4,4,2,2,10,11,12,9,1,6,7,3,3,5,4,2,10,11,12,12,9,1,1,6,6,6,6,6,6,6,6,6,7,7,7,6,11,7,10,10,11,9,10,10,1,7,3,5,4,2,10,11,12,9,1,6,1,1,1,1,1,1,6,6,1,6,1,6,6,1,1,11,6,6,3,4,2,10,11,12,9,1,6,7,9,7,7,7,7,11,11,6,11,7,12,9,1,6,10,9,1,6,2,7,1,6,6,1,6,10,11,12,9,1,6,3,5,4,2,7,3,5,4,2,10,11,12,9,1,6,7,3,5,4,2,10,11,12,9,1,6,7,3,5,4,2,10,11,12,9,1,6,1,8,0,7,13,14,15,16,17,18,19,20,21,22,16,22,23,24,25,26,27,28,29,25,30,28,27,30,26,27,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,0,45,0,45,0,45,0,45,0,0,46,47,48,49,50,45,46,47,48,49,50,45,46,47,48,49,50,45,46,47,48,49,50,45,47,48,49,46,47,48,49,50,45,46,47,48,49,50,45,46,47,48,49,50,46,47,48,49,50,45,46,47,48,49,50,46,47,48,49,50,47,48,49,46,47,48,49,50,45,45,45,45,45,46,47,48,49,50,45,46,47,48,49,50,45,46,47,48,49,50,45,46,47,48,49,50,45,46,47,48,49,50,45,47,48,49,51,52,53,54,55],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["localchange",3]],["result",4,[["invalidchangerequest",4]]]],[[["patch",3]],["result",4,[["invalidpatch",4]]]],[[["unstructured",3]],["result",6]],[[["unstructured",3]],["result",6]],[[["unstructured",3]],["result",6]],[[["unstructured",3]],["result",6]],[[["unstructured",3]],["result",6]],[[["unstructured",3]],["result",6]],[[],["value",4]],[[],["option",4,[["bool",15]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[["option",4,[["string",3]]]],["result",4]],[[],["localchange",3]],[[],["path",3]],[[],["conflicts",3]],[[],["cursor",3]],[[],["primitive",4]],[[],["value",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[["path",3]],["ordering",4]],[[],["option",4,[["i64",15]]]],[[],["option",4,[["cursor",3]]]],[[["path",3]],["option",4,[["cursor",3]]]],[[]],[[["path",3]],["localchange",3]],[[["automergefrontenderror",4]],["bool",15]],[[["invalidinitialstateerror",4]],["bool",15]],[[["invalidpatch",4]],["bool",15]],[[["invalidchangerequest",4]],["bool",15]],[[["localchange",3]],["bool",15]],[[["path",3]],["bool",15]],[[["conflicts",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["primitive",4]],["bool",15]],[[["value",4]],["bool",15]],[[],["option",4,[["f64",15]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["invalidactorid",3]],["automergefrontenderror",4]],[[]],[[]],[[]],[[]],[[]],[[["hashmap",3,[["opid",3],["value",4]]]]],[[]],[[]],[[["cursordiff",3]]],[[]],[[["char",15]],["value",4]],[[["str",15]]],[[["primitive",4]]],[[["cursor",3]]],[[["vec",3]]],[[["i64",15]]],[[["hashmap",3]]],[[]],[[["value",4]],["value",4]],[[["path",3]],["option",4,[["hashmap",3,[["opid",3],["value",4]]]]]],[[["path",3]],["option",4,[["objectid",4]]]],[[["path",3]],["option",4,[["value",4]]]],[[["path",3]],["option",4,[["cow",4]]]],[[]],[[],["vec",3,[["u64",15]]]],[[["path",3]],["localchange",3]],[[["path",3],["i64",15]],["localchange",3]],[[["u32",15]]],null,[[["path",3],["value",4]],["localchange",3]],[[["path",3],["vec",3,[["value",4]]]],["localchange",3]],[[],["option",4,[["i64",15]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["into",8,[["smolstr",3]]]],["path",3]],[[],["option",4]],[[],["option",4,[["hashmap",3]]]],[[["automergefrontenderror",4]],["bool",15]],[[["invalidpatch",4]],["bool",15]],[[["invalidchangerequest",4]],["bool",15]],[[["localchange",3]],["bool",15]],[[["path",3]],["bool",15]],[[["conflicts",3]],["bool",15]],[[["cursor",3]],["bool",15]],[[["primitive",4]],["bool",15]],[[["value",4]],["bool",15]],[[]],[[["u32",15],["objectid",4],["opid",3]],["cursor",3]],[[]],[[["value",4]],["result",4,[["invalidinitialstateerror",4]]]],[[["box",3,[["fn",8]]]]],[[["box",3,[["fn",8]]]]],[[]],[[["path",3]],["option",4,[["ordering",4]]]],[[],["option",4,[["primitive",4]]]],[[],["path",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["path",3]],["localchange",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["option",4,[["error",8]]]],[[],["value",4]],[[],["option",4,[["str",15]]]],[[],["option",4,[["hashmap",3]]]],[[],["option",4]],[[],["option",4,[["i64",15]]]],[[],["value",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4,[["u64",15]]]],[[["path",3]],["option",4,[["value",4]]]],null,[[],["rootref",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["listref",3]],[[],["mapref",3]],[[],["rootref",3]],[[],["tableref",3]],[[],["textref",3]],[[],["valueref",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["bool",15]],[[["str",15]],["bool",15]],[[["str",15]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],["option",4,[["valueref",4]]]],[[["str",15]],["option",4,[["valueref",4]]]],[[["str",15]],["option",4,[["valueref",4]]]],[[["str",15]],["option",4,[["valueref",4]]]],[[["usize",15]],["option",4,[["smolstr",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["option",4,[["listref",3]]]],[[],["option",4,[["mapref",3]]]],[[],["option",4,[["primitive",4]]]],[[],["option",4,[["tableref",3]]]],[[],["option",4,[["textref",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["value",4]],[[],["value",4]],[[],["value",4]],[[],["value",4]],[[],["value",4]],[[],["value",4]],[[]],[[]],[[]],null,null,null,null,null],"p":[[4,"Primitive"],[4,"InvalidChangeRequest"],[4,"AutomergeFrontendError"],[4,"InvalidPatch"],[4,"InvalidInitialStateError"],[4,"Value"],[3,"Frontend"],[8,"MutableDocument"],[3,"Cursor"],[3,"LocalChange"],[3,"Path"],[3,"Conflicts"],[13,"MissingObjectError"],[13,"NoSuchPathError"],[13,"InvalidActorIdString"],[13,"InsertNonTextInTextObject"],[13,"CannotOverwriteCounter"],[13,"NoSuchPathError"],[13,"IncrementForNonCounterObject"],[13,"InsertWithNonSequencePath"],[13,"InsertForNonSequenceObject"],[13,"InsertPastEndOfSequence"],[13,"MissingIndexError"],[13,"CannotSetNonMapObjectAsRoot"],[13,"MismatchedSequenceNumber"],[13,"MismatchingObjectIDs"],[13,"MismatchingObjectType"],[13,"InsertNonTextInTextObject"],[13,"ConflictsReceivedForTableKey"],[13,"InvalidIndex"],[13,"Bytes"],[13,"Str"],[13,"Int"],[13,"Uint"],[13,"F64"],[13,"Counter"],[13,"Timestamp"],[13,"Boolean"],[13,"Cursor"],[13,"Map"],[13,"Table"],[13,"List"],[13,"Text"],[13,"Primitive"],[4,"ValueRef"],[3,"ListRef"],[3,"MapRef"],[3,"RootRef"],[3,"TableRef"],[3,"TextRef"],[13,"Primitive"],[13,"Map"],[13,"Table"],[13,"List"],[13,"Text"]]},\
"automerge_protocol":{"doc":"","t":[12,12,12,3,13,13,13,13,13,3,3,13,13,13,13,13,13,13,3,4,13,4,4,4,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,3,13,13,13,13,13,3,4,3,13,13,13,13,3,4,4,3,3,4,4,3,13,13,3,4,4,3,13,4,13,13,3,13,13,13,13,13,3,13,13,13,3,13,13,13,13,13,13,13,13,13,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,12,12,12,12,12,11,11,11,12,11,11,11,11,11,11,12,12,11,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,3,3,3,3,3,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12],"n":["0","0","1","ActorId","Boolean","Boolean","Bytes","Bytes","Bytes","Change","ChangeHash","Counter","Counter","Counter","Cursor","Cursor","Cursor","Cursor","CursorDiff","DataType","Del","Diff","DiffEdit","ElementId","F64","F64","F64","Head","HexDecode","Id","Id","Inc","IncorrectLength","Int","Int","Int","Key","List","List","List","ListDiff","Make","Map","Map","Map","Map","MapDiff","MapType","MultiElementInsert","MultiElementInsert","MultiSet","Null","Null","ObjDiff","ObjType","ObjectId","Op","OpId","OpType","ParseChangeHashError","Patch","Remove","Root","RootDiff","ScalarValue","ScalarValueKind","ScalarValues","Seq","SequenceType","Set","SingleElementInsert","SortedVec","Str","Str","Table","Table","Table","TableDiff","Text","Text","Text","TextDiff","Timestamp","Timestamp","Timestamp","Uint","Uint","Uint","Undefined","Update","Value","action","actor","actor","actor_id","append","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","arbitrary_take_rest","as_datatype","as_element_id","as_numerical_datatype","as_numerical_datatype","as_opid","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clock","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","counter","datatype","default","default","delta","deps","deps","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diffs","edits","edits","elem_id","elem_id","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","error","extra_bytes","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_str","from_str","from_str","from_str","from_str","from_values_and_datatype","get","get","get_mut","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","head","increment_by","increment_by","increment_by","index","index","insert","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_key","is_empty","is_empty","is_map_key","is_sequence","is_undefined","iter","iter","key","len","len","max_op","message","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","not_head","obj","obj_type","obj_type","object_id","object_id","object_id","object_id","object_id","object_id","object_id","object_type","op_id_at","op_id_of","operations","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pending_changes","pred","primitive_value","props","props","props","random","seq","seq","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size_hint","size_hint","size_hint","size_hint","source","start_op","time","to_bytes","to_f64","to_hex_string","to_i64","to_i64","to_opid","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_u64","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","values","0","0","0","0","0","0","0","count","elem_id","index","index","index","op_id","op_id","value","value","0","0","0","0","0","0","0","0","0","0","actual","0","0","0","0","0","0","0","0","0","0","0","0","0","0","Empty","InvalidActorId","InvalidChangeHashSlice","InvalidElementId","InvalidObjectId","InvalidOpId","InvalidScalarValue","InvalidScalarValues","UnexpectedKind","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","datatype","eq","eq","eq","eq","expected","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","into","ne","ne","ne","ne","raw_value","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unexpected","0","1"],"q":["automerge_protocolautomerge_protocol::Diff","","","","","","automerge_protocol::DiffEdit","","","","","","","","","","automerge_protocol::ElementId","automerge_protocol::Key","","automerge_protocol::ObjectId","automerge_protocol::OpType","","","","","automerge_protocol::ParseChangeHashError","","automerge_protocol::ScalarValue","","","","","","","","","automerge_protocol::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","automerge_protocol::error::InvalidScalarValues",""],"d":["","","","An actor id is a sequence of bytes. By default we use a …","","","","","","","","","","","","","","","","","Perform a deletion, expanding the operation to cover <code>n</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes the insertion of a consecutive sequence of …","","","","","","","","","","","","","","A custom MapDiff that implicitly has the object_id Root …","","Auto-generated discriminant enum variants","We don’t implement Serialize/Deserialize b/c this struct …","","","","Describes the insertion of a single element into a list or …","","","","","","","","","","","","","","","","","","","Describes the update of the value or nested object at a …","","","","","","Try to append a <code>ScalarValue</code> to a <code>ScalarValues</code>. If we can’…","","","","","","","","","","","Returns an Option containing a <code>DataType</code> if <code>self</code> represents …","Returns an Option containing a <code>DataType</code> if <code>self</code> represents …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if <code>other</code> has the same actor ID, and their …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the unique ID of the first inserted element","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the list index at which to insert the first value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If this value can be coerced to an i64, return the i64 …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the unique element ID of the new list element","the list index at which to insert the new element","the list index to update","","ID of the operation that assigned this value","ID of the operation that assigned this value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,2,1,0,3,4,5,3,4,0,0,5,3,4,5,3,4,6,0,0,7,0,0,0,5,3,4,8,9,10,8,7,9,5,3,4,0,11,12,6,0,7,11,13,14,6,0,0,0,15,7,3,4,0,0,0,0,0,0,0,0,15,10,0,0,0,0,14,0,7,15,0,3,4,11,13,6,0,11,12,6,0,5,3,4,5,3,4,5,15,6,16,1,17,18,19,20,13,1,10,20,13,1,10,4,14,19,4,8,20,11,13,12,1,10,8,14,5,19,3,4,7,21,16,2,9,6,22,23,24,25,26,27,15,28,17,29,18,20,11,13,12,1,10,8,14,5,19,3,4,7,21,16,2,9,6,22,23,24,25,26,27,15,28,17,29,18,17,20,11,13,12,1,10,8,14,5,19,3,4,7,21,16,2,6,22,23,24,25,26,27,15,28,17,29,18,20,11,13,12,1,10,8,14,5,19,3,4,7,21,16,2,6,22,23,24,25,26,27,15,28,17,29,18,20,1,10,8,14,2,1,4,21,29,1,17,18,20,11,13,12,1,10,8,5,4,21,16,2,6,22,23,24,25,26,15,28,17,29,18,17,24,25,27,28,20,11,13,12,1,10,8,14,5,19,3,4,7,21,16,2,6,22,23,24,25,26,27,15,28,17,29,18,0,18,20,20,11,11,13,12,1,1,10,10,8,8,14,5,19,3,3,4,4,7,21,16,2,9,9,6,22,23,24,25,26,27,15,28,17,29,18,20,20,20,20,20,11,11,11,13,12,1,10,10,10,10,8,8,8,14,14,14,14,14,5,19,19,3,3,3,4,4,4,4,4,4,4,7,21,21,16,2,9,9,6,6,6,6,22,23,24,25,26,27,15,28,17,29,18,21,20,1,10,8,2,19,19,21,21,20,11,13,12,1,10,8,14,2,18,14,1,8,14,27,28,16,20,11,13,12,1,10,8,14,5,19,3,4,7,21,16,2,9,6,22,23,24,25,26,27,15,28,17,29,18,21,8,19,21,14,11,5,19,21,16,19,21,17,18,20,1,10,8,14,19,4,7,21,16,2,6,22,23,24,25,26,27,15,28,17,29,1,19,21,8,16,16,26,6,22,23,24,25,26,27,6,20,18,18,20,1,10,8,14,2,17,16,16,22,23,29,20,17,18,20,11,13,12,1,10,8,14,5,4,7,21,16,2,6,26,27,15,28,17,29,18,20,13,1,10,9,18,18,20,4,20,4,16,14,20,11,13,12,1,10,8,14,5,19,3,4,7,21,16,2,6,22,23,24,25,26,27,15,28,17,29,18,20,11,1,10,8,3,4,9,4,20,20,11,13,12,1,1,10,10,8,8,14,5,19,19,3,4,7,21,16,2,2,9,6,22,23,24,25,26,27,15,28,17,29,18,20,11,13,12,1,10,8,14,5,19,3,4,7,21,16,2,9,6,22,23,24,25,26,27,15,28,17,29,18,20,11,13,12,1,10,8,14,5,19,3,4,7,21,16,2,9,6,22,23,24,25,26,27,15,28,17,29,18,28,30,31,32,33,34,35,36,37,38,38,39,37,38,39,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,0,0,0,0,0,0,0,65,60,61,62,63,64,66,65,60,61,62,63,64,66,65,66,61,64,66,65,66,60,60,61,61,62,62,63,63,64,64,66,66,65,65,60,61,62,63,64,66,65,60,61,62,63,64,66,65,61,64,66,65,66,60,61,62,63,64,66,65,60,61,62,63,64,66,65,60,61,62,63,64,66,65,60,61,62,63,64,66,65,66,67,67],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["actorid",3]],null,null,[[["scalarvalue",4]],["option",4,[["scalarvaluekind",4]]]],[[["unstructured",3]],["result",6]],[[["unstructured",3]],["result",6]],[[["unstructured",3]],["result",6]],[[["unstructured",3]],["result",6]],[[["unstructured",3]],["result",6]],[[["unstructured",3]],["result",6]],[[["unstructured",3]],["result",6]],[[["unstructured",3]],["result",6]],[[["datatype",4]],["result",4,[["scalarvalue",4],["invalidscalarvalue",3]]]],[[],["option",4,[["elementid",4]]]],[[],["option",4,[["datatype",4]]]],[[],["option",4,[["datatype",4]]]],[[],["option",4,[["opid",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["actorid",3]],[[],["objtype",4]],[[],["maptype",4]],[[],["sequencetype",4]],[[],["opid",3]],[[],["objectid",4]],[[],["elementid",4]],[[],["key",4]],[[],["datatype",4]],[[],["scalarvalues",3]],[[],["scalarvaluekind",4]],[[],["scalarvalue",4]],[[],["optype",4]],[[],["sortedvec",3]],[[],["op",3]],[[],["changehash",3]],[[],["diff",4]],[[],["mapdiff",3]],[[],["tablediff",3]],[[],["listdiff",3]],[[],["textdiff",3]],[[],["objdiff",3]],[[],["cursordiff",3]],[[],["diffedit",4]],[[],["multielementinsert",3]],[[],["patch",3]],[[],["rootdiff",3]],[[],["change",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["actorid",3]],["ordering",4]],[[],["ordering",4]],[[],["ordering",4]],[[],["ordering",4]],[[],["ordering",4]],[[["changehash",3]],["ordering",4]],[[],["u64",15]],[[],["option",4,[["datatype",4]]]],[[],["sortedvec",3]],[[],["rootdiff",3]],[[["u64",15]],["bool",15]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,[[["actorid",3]],["bool",15]],[[["objtype",4]],["bool",15]],[[["maptype",4]],["bool",15]],[[["sequencetype",4]],["bool",15]],[[["opid",3]],["bool",15]],[[["objectid",4]],["bool",15]],[[["elementid",4]],["bool",15]],[[["key",4]],["bool",15]],[[["datatype",4]],["bool",15]],[[["scalarvalues",3]],["bool",15]],[[["scalarvaluekind",4]],["bool",15]],[[["scalarvalue",4]],["bool",15]],[[["optype",4]],["bool",15]],[[["sortedvec",3]],["bool",15]],[[["op",3]],["bool",15]],[[["changehash",3]],["bool",15]],[[["diff",4]],["bool",15]],[[["mapdiff",3]],["bool",15]],[[["tablediff",3]],["bool",15]],[[["listdiff",3]],["bool",15]],[[["textdiff",3]],["bool",15]],[[["objdiff",3]],["bool",15]],[[["cursordiff",3]],["bool",15]],[[["diffedit",4]],["bool",15]],[[["multielementinsert",3]],["bool",15]],[[["patch",3]],["bool",15]],[[["rootdiff",3]],["bool",15]],[[],["bool",15]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["uuid",3]]],[[["vec",3]]],[[["vec",3,[["u8",15]]]]],[[]],[[["sequencetype",4]]],[[["maptype",4]]],[[]],[[]],[[]],[[]],[[["opid",3]]],[[["objectid",4]]],[[["opid",3]]],[[]],[[["opid",3]]],[[["opid",3]]],[[["elementid",4]]],[[]],[[["opid",3]]],[[["opid",3]]],[[]],[[]],[[["scalarvalue",4]]],[[]],[[]],[[["scalarvalue",4]],["scalarvaluekind",4]],[[["scalarvalue",4]],["scalarvaluekind",4]],[[["str",15]]],[[["i64",15]]],[[]],[[["u64",15]]],[[["i32",15]]],[[["bool",15]]],[[["char",15]]],[[]],[[]],[[["vec",3]]],[[]],[[]],[[["fromhexerror",4]]],[[]],[[["scalarvalue",4]]],[[["scalarvalue",4]]],[[]],[[["str",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4,[["objectid",4]]]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["vec",3,[["scalarvalue",4]]],["option",4,[["datatype",4]]]],["result",4]],[[["usize",15]],["option",4,[["scalarvalue",4]]]],[[["usize",15]],["option",4]],[[["usize",15]],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["key",4]],[[["u64",15]],["opid",3]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["key",4]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["datatype",4]],["bool",15]],[[],["iter",3,[["scalarvalue",4]]]],[[]],null,[[],["usize",15]],[[],["usize",15]],null,null,[[["actorid",3]],["bool",15]],[[["opid",3]],["bool",15]],[[["objectid",4]],["bool",15]],[[["elementid",4]],["bool",15]],[[["key",4]],["bool",15]],[[["scalarvalues",3]],["bool",15]],[[["scalarvalue",4]],["bool",15]],[[["optype",4]],["bool",15]],[[["sortedvec",3]],["bool",15]],[[["op",3]],["bool",15]],[[["changehash",3]],["bool",15]],[[["diff",4]],["bool",15]],[[["mapdiff",3]],["bool",15]],[[["tablediff",3]],["bool",15]],[[["listdiff",3]],["bool",15]],[[["textdiff",3]],["bool",15]],[[["objdiff",3]],["bool",15]],[[["cursordiff",3]],["bool",15]],[[["diffedit",4]],["bool",15]],[[["multielementinsert",3]],["bool",15]],[[["patch",3]],["bool",15]],[[["rootdiff",3]],["bool",15]],[[["u64",15],["actorid",3]],["opid",3]],[[["scalarvaluekind",4]]],[[]],[[],["bool",15]],null,[[],["option",4,[["objtype",4]]]],null,[[],["option",4,[["objectid",4]]]],null,null,null,null,null,null,[[],["option",4,[["objtype",4]]]],[[["u64",15]],["opid",3]],[[["u64",15]],["option",4,[["opid",3]]]],null,[[["actorid",3]],["option",4,[["ordering",4]]]],[[],["option",4,[["ordering",4]]]],[[],["option",4,[["ordering",4]]]],[[],["option",4,[["ordering",4]]]],[[],["option",4,[["ordering",4]]]],[[["changehash",3]],["option",4,[["ordering",4]]]],null,null,[[],["option",4,[["scalarvalue",4]]]],null,null,null,[[],["actorid",3]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["option",4,[["error",8]]]],null,null,[[]],[[],["option",4,[["f64",15]]]],[[],["string",3]],[[],["option",4,[["i64",15]]]],[[],["option",4,[["i64",15]]]],[[],["option",4,[["opid",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["option",4,[["u64",15]]]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4,[["invalidopid",3]]]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[["vec",3,[["scalarvalue",4]]]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["invalidobjectid",3]],["bool",15]],[[["invalidchangehashslice",3]],["bool",15]],[[["invalidscalarvalue",3]],["bool",15]],[[["invalidscalarvalues",4]],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["invalidobjectid",3]],["bool",15]],[[["invalidchangehashslice",3]],["bool",15]],[[["invalidscalarvalue",3]],["bool",15]],[[["invalidscalarvalues",4]],["bool",15]],null,[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null],"p":[[3,"OpId"],[3,"ChangeHash"],[4,"ScalarValueKind"],[4,"ScalarValue"],[4,"DataType"],[4,"Diff"],[4,"OpType"],[4,"ElementId"],[4,"ParseChangeHashError"],[4,"ObjectId"],[4,"ObjType"],[4,"SequenceType"],[4,"MapType"],[4,"Key"],[4,"DiffEdit"],[3,"Op"],[3,"Patch"],[3,"Change"],[3,"ScalarValues"],[3,"ActorId"],[3,"SortedVec"],[3,"MapDiff"],[3,"TableDiff"],[3,"ListDiff"],[3,"TextDiff"],[3,"ObjDiff"],[3,"CursorDiff"],[3,"MultiElementInsert"],[3,"RootDiff"],[13,"Map"],[13,"Table"],[13,"List"],[13,"Text"],[13,"Value"],[13,"Cursor"],[13,"MultiElementInsert"],[13,"Remove"],[13,"SingleElementInsert"],[13,"Update"],[13,"Id"],[13,"Map"],[13,"Seq"],[13,"Id"],[13,"Make"],[13,"Del"],[13,"Inc"],[13,"Set"],[13,"MultiSet"],[13,"HexDecode"],[13,"IncorrectLength"],[13,"Bytes"],[13,"Str"],[13,"Int"],[13,"Uint"],[13,"F64"],[13,"Counter"],[13,"Timestamp"],[13,"Cursor"],[13,"Boolean"],[3,"InvalidOpId"],[3,"InvalidObjectId"],[3,"InvalidElementId"],[3,"InvalidActorId"],[3,"InvalidChangeHashSlice"],[4,"InvalidScalarValues"],[3,"InvalidScalarValue"],[13,"UnexpectedKind"]]},\
"perf":{"doc":"","t":[5,5,5,5,5,5],"n":["f","f_sync","g","h","main","trace"],"q":["perf","","","","",""],"d":["","","","","",""],"i":[0,0,0,0,0,0],"f":[[[]],[[]],[[]],[[]],[[]],[[["vec",3]]]],"p":[]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};